// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.1.51'

    println("${project.name}: buildscript")
    // 导入 external 全局变量
    apply from: "ext.gradle"

    repositories {
        jcenter()
    }
    dependencies {
        //classpath 'com.android.tools.build:gradle:2.3.3'
        classpath _android.plugin

        classpath _kotlin.kotlin_gradle_plugin
        classpath _kotlin.kotlin_android_extensions
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

subprojects {
    def isAppModule = it.name.equals('app')

    apply plugin: isAppModule ? 'com.android.application' : 'com.android.library'

    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-android-extensions'   // 拓展

    // kapt
    apply plugin: 'kotlin-kapt'
    kapt {
        generateStubs = true
    }

    android {
        compileSdkVersion _android.compileSdkVersion as Integer
        buildToolsVersion _android.buildToolsVersion as String

        defaultConfig {
            if (isAppModule)
                applicationId "com.zzl.top"

            minSdkVersion _android.minSdkVersion as Integer
            targetSdkVersion _android.targetSdkVersion as Integer
            versionCode _android.versionCode as Integer
            versionName _android.versionName as String
        }

        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
        }

        sourceSets {
            main {
                java.srcDirs = ['src/main/java', 'src/main/kotlin']
            }
            //main.java.srcDirs += 'src/main/kotlin'
        }
    }

    dependencies {
        // kotlin
        compile _kotlin.kotlin_stdlib

        // rxjava
        compile rx.rxjava2
        compile rx.rxandroid2
    }
}

allprojects {
    repositories {
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
